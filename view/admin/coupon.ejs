<%- include("../../view/partials/admin/header") %>

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f4f6f8;
            font-family: 'Inter', sans-serif;
        }
        .card {
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .btn-add-coupon {
            background-color: #4CAF50;
            color: white;
        }
        .btn-add-coupon:hover {
            background-color: #45a049;
        }
        .form-control:focus, .form-select:focus {
            border-color: #4CAF50;
            box-shadow: 0 0 0 0.2rem rgba(76, 175, 80, 0.25);
        }

        
.error-message {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
}

.form-control.is-invalid, .form-select.is-invalid {
    border-color: #dc3545;
    padding-right: calc(1.5em + 0.75rem);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}
    </style>
</head>

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title mb-0">Coupons</h3>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                        <i class="fas fa-plus me-2"></i>Add New Coupon
                    </button>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Coupon Code</th>
                                    <th>Amount Type</th>
                                    <th>Offer Amount</th>
                                    <th>Minimum Purchase</th>
                                    <th>Start Date</th>
                                    <th>Expiry Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% coupons.forEach(function(coupon) { %>
                                <tr>
                                    <td><%= coupon.name %></td>
                                    <td><%= coupon.amountType %></td>
                                    <td>
                                        <%= coupon.amountType === 'percentage' ? coupon.offerPrice + '%' : '₹' + coupon.offerPrice %>
                                    </td>
                                    <td>₹<%= coupon.minimumPrice %></td>
                                    <td><%= coupon.startOn.toLocaleDateString() %></td>
                                    <td><%= coupon.expireOn.toLocaleDateString() %></td>
                                    <td>
                                        <button class="btn btn-sm <%= coupon.isList ? 'btn-success' : 'btn-secondary' %> btn-status" 
                                                data-id="<%= coupon._id %>" 
                                                data-status="<%= coupon.isList %>">
                                            <%= coupon.isList ? 'Active' : 'Inactive' %>
                                        </button>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-primary btn-edit" data-id="<%= coupon._id %>">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                        <button class="btn btn-sm btn-danger btn-delete" data-id="<%= coupon._id %>">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Coupon Modal -->
<div class="modal fade" id="addCouponModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addCouponForm" novalidate>
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" name="name" required>
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Amount Type</label>
                            <select class="form-select" name="amountType" required id="amountType">
                                <option value="">Select Amount Type</option>
                                <option value="percentage">Percentage</option>
                                <option value="fixed">Fixed Amount</option>
                            </select>
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Offer Amount</label>
                            <input type="number" class="form-control" name="offerPrice" required min="0" id="offerPrice">
                            <small class="text-muted" id="amountHelp"></small>
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Minimum Purchase (₹)</label>
                            <input type="number" class="form-control" name="minimumPrice" required min="0">
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Start Date</label>
                            <input type="date" class="form-control" name="startOn" required>
                            <div class="error-message"></div>
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Expiry Date</label>
                            <input type="date" class="form-control" name="expireOn" required>
                            <div class="error-message"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Coupon</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- //edit coupon modal -->

<div class="modal fade" id="editCouponModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCouponForm">
                <input type="hidden" name="couponId" id="editCouponId">
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" name="name" id="editName" >
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Amount Type</label>
                            <select class="form-select" name="amountType" id="editAmountType" >
                                <option value="">Select Amount Type</option>
                                <option value="percentage">Percentage</option>
                                <option value="fixed">Fixed Amount</option>
                            </select>
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Offer Amount</label>
                            <input type="number" class="form-control" name="offerPrice" id="editOfferPrice" >
                            <small class="text-muted" id="editAmountHelp"></small>
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Minimum Purchase (₹)</label>
                            <input type="number" class="form-control" name="minimumPrice" id="editMinimumPrice" >
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Start Date</label>
                            <input type="date" class="form-control" name="startOn" id="editStartOn" >
                            <div class="error-message"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Expiry Date</label>
                            <input type="date" class="form-control" name="expireOn" id="editExpireOn" >
                            <div class="error-message"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Update Coupon</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

 <script>
document.addEventListener('DOMContentLoaded', function() {
    // Amount type 
    const amountType = document.getElementById('amountType');
    const offerPrice = document.getElementById('offerPrice');
    const amountHelp = document.getElementById('amountHelp');

    amountType.addEventListener('change', function() {
        if (this.value === 'percentage') {
            offerPrice.setAttribute('max', '99');
            offerPrice.setAttribute('step', '0.1');
            amountHelp.textContent = 'Enter percentage between 0 and 100';
        } else {
            offerPrice.removeAttribute('max');
            offerPrice.setAttribute('step', '1');
            amountHelp.textContent = 'Enter amount in ₹';
        }
    });

    // Coupon Form Submission
    const addCouponForm = document.getElementById('addCouponForm');
    addCouponForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        try {
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);

            // Validate percentage
            if (data.amountType === 'percentage' && (data.offerPrice < 0 || data.offerPrice > 100)) {
                alert('Percentage must be between 0 and 100');
                return;
            }

            const response = await fetch('/admin/coupons/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (result.success) {
                alert('Coupon added successfully!');
                window.location.reload();
            } else {
                alert(result.message || 'Error adding coupon');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Error adding coupon');
        }
    });

    // Status Button Click Handler
    document.querySelectorAll('.btn-status').forEach(button => {
        button.addEventListener('click', async function() {
            try {
                const response = await fetch(`/admin/coupons/status/${this.dataset.id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (result.success) {
                    window.location.reload();
                } else {
                    alert(result.message || 'Error updating status');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating status');
            }
        });
    });

    //edit script

    document.querySelectorAll('.btn-edit').forEach(button => {
        button.addEventListener('click', async function() {
            const couponId = this.dataset.id;
            try {
                const response = await fetch(`/admin/coupons/${couponId}`);
                const result = await response.json();

                if (result.success) {
                    const coupon = result.coupon;
                    
                    // Populate the edit form
                    document.getElementById('editCouponId').value = coupon._id;
                    document.getElementById('editName').value = coupon.name;
                    document.getElementById('editAmountType').value = coupon.amountType;
                    document.getElementById('editOfferPrice').value = coupon.offerPrice;
                    document.getElementById('editMinimumPrice').value = coupon.minimumPrice;
                    
                    // Format dates for input fields (YYYY-MM-DD)
                    const startDate = new Date(coupon.startOn).toISOString().split('T')[0];
                    const expireDate = new Date(coupon.expireOn).toISOString().split('T')[0];
                    document.getElementById('editStartOn').value = startDate;
                    document.getElementById('editExpireOn').value = expireDate;

                    // Update amount help text based on amount type
                    const editAmountHelp = document.getElementById('editAmountHelp');
                    if (coupon.amountType === 'percentage') {
                        document.getElementById('editOfferPrice').setAttribute('max', '99');
                        editAmountHelp.textContent = 'Enter percentage between 0 and 100';
                    } else {
                        document.getElementById('editOfferPrice').removeAttribute('max');
                        editAmountHelp.textContent = 'Enter amount in ₹';
                    }

                    // Show the modal
                    const editModal = new bootstrap.Modal(document.getElementById('editCouponModal'));
                    editModal.show();
                } else {
                    alert(result.message || 'Error fetching coupon details');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error fetching coupon details');
            }
        });
    });

    // Edit form submission
    const editCouponForm = document.getElementById('editCouponForm');
    editCouponForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        try {
            const formData = new FormData(this);
            const couponId = formData.get('couponId');
            const data = Object.fromEntries(formData);

            // Validate percentage
            if (data.amountType === 'percentage' && (data.offerPrice < 0 || data.offerPrice > 99)) {
                alert('Percentage must be between 0 and 100');
                return;
            }

            const response = await fetch(`/admin/coupons/${couponId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (result.success) {
                alert('Coupon updated successfully!');
                window.location.reload();
            } else {
                alert(result.message || 'Error updating coupon');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Error updating coupon');
        }
    });

    // Amount type change handler for edit form
    document.getElementById('editAmountType').addEventListener('change', function() {
        const editOfferPrice = document.getElementById('editOfferPrice');
        const editAmountHelp = document.getElementById('editAmountHelp');
        
        if (this.value === 'percentage') {
            editOfferPrice.setAttribute('max', '99');
            editOfferPrice.setAttribute('step', '0.1');
            editAmountHelp.textContent = 'Enter percentage between 0 and 100';
        } else {
            editOfferPrice.removeAttribute('max');
            editOfferPrice.setAttribute('step', '1');
            editAmountHelp.textContent = 'Enter amount in ₹';
        }
    });

    // Delete Button Click Handler
    document.querySelectorAll('.btn-delete').forEach(button => {
        button.addEventListener('click', async function() {
            if (!confirm('Are you sure you want to delete this coupon?')) return;

            try {
                const response = await fetch(`/admin/coupons/${this.dataset.id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (result.success) {
                    window.location.reload();
                } else {
                    alert(result.message || 'Error deleting coupon');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error deleting coupon');
            }
        });
    });
});
</script>


<%- include("../../view/partials/admin/footer") %>