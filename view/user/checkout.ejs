<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .address-card {
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .address-card:hover {
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }

        .selected-address {
            border-color: #28a745;
        }

        .address-card .card-body {
            padding: 1.25rem;
        }

        .address-card h6 {
            margin-bottom: 0.5rem;
            color: #333;
        }

        .address-card p {
            color: #666;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <%- include("../../view/partials/user/header") %>

    <div class="container my-5">
        <!-- Progress Bar -->
        <div class="progress mb-4" style="height: 25px;">
            <div class="progress-bar" role="progressbar" style="width: 50%;" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100">Checkout Progress</div>
        </div>

        <div class="row">
            <!-- Left Column - Address and Payment -->
            <div class="col-lg-8">
                <!-- Address Section -->
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Shipping Address</h5>
                        <a href="/addAddress?redirectTo=checkout" class="btn btn-link" style="text-decoration: none;">
                            <i class="fas fa-plus"></i> Add New Address
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <% if (addresses && addresses.length > 0) { %>
                                <% addresses.forEach((address, index) => { %>
                                    <div class="col-md-6 mb-3">
                                        <div class="card address-card" data-address-index="<%= index %>">
                                            <div class="card-body">
                                                <div class="form-check">
                                                    <input class="form-check-input" 
                                                           type="radio" 
                                                           name="selectedAddress" 
                                                           id="address<%= index %>" 
                                                           value="<%= index %>"
                                                           onchange="handleAddressSelection(this.value)">
                                                    <label class="form-check-label" for="address<%= index %>">
                                                        <h6><%= address.addressType %></h6>
                                                        <p class="mb-1"><%= address.name %></p>
                                                        <p class="mb-1"><%= address.landMark %></p>
                                                        <p class="mb-1"><%= address.city %>, <%= address.state %> <%= address.pincode %></p>
                                                        <p class="mb-1">Phone: <%= address.phone %></p>
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <a href="/editAddress?id=<%= address._id %>" class="btn btn-small">Edit</a>
                                        <a href="/deleteAddress?id=<%= address._id %>" class="btn btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <div class="col-12">
                                    <div class="alert alert-info">
                                        No saved addresses found. Please add a new address.
                                    </div>
                                </div>
                            <% } %>
                        </div>
                        <!-- Hidden input to store selected address -->
                        <input type="hidden" id="selectedAddressIndex" name="addressIndex" value="">
                    </div>
                </div>

                <!-- Payment Section -->
                <div class="card mb-3">
                    <div class="card-header">
                        <h5 class="mb-0">Payment Method</h5>
                    </div>
                    <div class="card-body">
                        <div class="form-check mb-2">
                            <input class="form-check-input" 
                                   type="radio" 
                                   name="paymentMethod" 
                                   id="cod" 
                                   value="COD">
                            <label class="form-check-label" for="cod">
                                Cash on Delivery (COD)
                            </label>
                        </div>
                        <div class="form-check mb-2">
                            <input class="form-check-input" 
                                   type="radio" 
                                   name="paymentMethod" 
                                   id="onlinePayment" 
                                   value="Online">
                            <label class="form-check-label" for="onlinePayment">
                                Online Payment
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Order Summary -->
            <div class="col-lg-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Cart Items</h5>
                    </div>
                    <div class="card-body">
                        <% if (cart && cart.items && cart.items.length > 0) { %>
                            <% cart.items.forEach(item => { %>
                                <div class="d-flex mb-3 align-items-center">
                                    <img src="/uploads/<%= item.productId.productImage[0] %>" 
                                         alt="<%= item.productId.productName %>" 
                                         style="width: 60px; height: 60px; object-fit: cover;"
                                         class="me-3">
                                    <div class="flex-grow-1">
                                        <h6 class="mb-0"><%= item.productId.productName %></h6>
                                        <small class="text-muted">
                                            Size: <%= item.size %> | Qty: <%= item.quantity %>
                                        </small>
                                        <div class="text-primary">
                                            $<%= item.price.toFixed(2) %>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Order Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal</span>
                            <span>$<%= totals.subtotal %></span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping</span>
                            <% if (totals.shipping === 0) { %>
                                <span class="text-success">Free</span>
                            <% } else { %>
                                <span>$<%= totals.shipping %></span>
                            <% } %>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tax (10%)</span>
                            <span>$<%= totals.tax %></span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total</strong>
                            <strong>$<%= totals.totalPrice %></strong>
                        </div>
                        <button id="placeOrderBtn" 
                                class="btn btn-primary w-100" 
                                onclick="placeOrder()"
                                <%= !addresses.length ? 'disabled' : '' %>>
                            Place Order
                        </button>
                        <% if (!addresses.length) { %>
                            <small class="text-danger d-block mt-2 text-center">
                                Please add a delivery address to proceed
                            </small>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

   

                

    

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Address card selection
        document.querySelectorAll('.address-card').forEach(card => {
            card.addEventListener('click', function() {
                document.querySelectorAll('.address-card').forEach(c => c.classList.remove('selected-address'));
                this.classList.add('selected-address');
            });
        });

        

        // Payment method toggle
        document.querySelectorAll('input[name="paymentMethod"]').forEach(input => {
            input.addEventListener('change', function() {
                const creditCardForm = document.getElementById('creditCardForm');
                creditCardForm.style.display = this.id === 'creditCard' ? 'block' : 'none';
            });
        });
    


        //latest

function selectAddress(addressId) {
    // Remove selected class from all address cards
    document.querySelectorAll('.address-card').forEach(card => {
        card.classList.remove('selected-address');
    });
    
    // Add selected class to clicked address card
    const selectedCard = document.querySelector(`[data-address-id="${addressId}"]`);
    if (selectedCard) {
        selectedCard.classList.add('selected-address');
    }
    
    // Store selected address ID (you can use this when placing the order)
    document.getElementById('selectedAddressId').value = addressId;
}

function editAddress(addressId) {
    // Redirect to address edit page or show edit modal
    window.location.href = `/address/edit/${addressId}`;
}

function deleteAddress(addressId) {
    if (confirm('Are you sure you want to delete this address?')) {
        fetch(`/address/delete/${addressId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove the address card from DOM
                const addressCard = document.querySelector(`[data-address-id="${addressId}"]`).parentNode;
                addressCard.remove();
                
                // Show success message
                alert('Address deleted successfully');
            } else {
                alert('Failed to delete address');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while deleting the address');
        });
    }
}

function showAddAddressForm() {
    // Implement your logic to show address form modal or redirect to add address page
    window.location.href = '/address/add';
}



///////////////////////


// display prices
function handleAddressSelection(index) {
    // Store the selected address index
    document.getElementById('selectedAddressIndex').value = index;
    
    // Update visual selection
    document.querySelectorAll('.address-card').forEach(card => {
        card.classList.remove('selected-address');
    });
    
    const selectedCard = document.querySelector(`[data-address-index="${index}"]`);
    if (selectedCard) {
        selectedCard.classList.add('selected-address');
    }
}

// Updated place order function
async function placeOrder() {
    const selectedAddressIndex = document.getElementById('selectedAddressIndex').value;
    const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;

    if (!selectedAddressIndex && selectedAddressIndex !== '0') {
        alert('Please select a delivery address');
        return;
    }

    if (!selectedPaymentMethod) {
        alert('Please select a payment method');
        return;
    }

    try {
        const response = await fetch('/place-order', {  // Updated to match your route
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                addressIndex: parseInt(selectedAddressIndex),
                paymentMethod: selectedPaymentMethod
            })
        });

        const data = await response.json();
        console.log('API Response:', data);

        if (data.success) {

            const orderId = data.orderId;

            Swal.fire({
                title: 'Order Placed Successfully!',
                text: 'Your order has been placed. What would you like to do next?',
                icon: 'success',
                showCancelButton: true,
                confirmButtonText: 'Go to Home',
                cancelButtonText: 'Order Details'
        }).then((result) => {
                if (result.isConfirmed) {
                    // Go to home page
                    window.location.href = '/';
                } else {
                    // Go to order details page
                    window.location.href = `/order/success/${orderId}`;
                }
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: data.error || 'Failed to place order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.error('Error placing order:', error);
        Swal.fire({
            title: 'Unexpected Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}



</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<%-include("../../view/partials/user/footer")%>
